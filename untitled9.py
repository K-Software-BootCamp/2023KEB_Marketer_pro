# -*- coding: utf-8 -*-
"""Untitled9.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1iEdEcgCRbpYMo3WrbAzvEY1YqVrBgpg8
"""



import requests

base_url = "https://graph.facebook.com/v17.0/17841403852508474"

# Access Token
access_token = "EAAOPl0dn7PsBO4z7BOEqHyZCOvdeX6XxRSEZA2MCsctJWJBMigv24FDPlEVr4VpTNx32Is0N0cmf9gT8DS0Uu77ZAJFXakKJPMJYftXcFZBxpKdIx1FJJb5CVRO7cs4usecPQnX4uxU7nSFdbNzeooE0yRjqlxTTaihcmXy9OqwoJPQvnAEVoQZBab6zQGpurQzWw7kaCp2hgZA04ZD"

# 프로필 정보를 가져오기 위한 매개변수
profile_params = {
    "fields": "business_discovery.username(b.saem){biography,name,username,follows_count,website,ig_id,followers_count,media_count}",
    "access_token": access_token,
    "limit": 10
}

# 피드 데이터를 가져오기 위한 매개변수
feed_params = {
    "fields": "business_discovery.username(b.saem){media{id,caption,comments_count,children{media_type},like_count,media_product_type,timestamp,username}}",
    "access_token": access_token
}

# 피드 데이터를 가져오는 함수
def fetch_feed_data(feed_params):
    while True:
        feed_response = requests.get(base_url, params=feed_params)
        if feed_response.status_code == 200:
            data = feed_response.json()
            media_list = data['business_discovery']['media']['data']
            discovery_list = data['business_discovery']['media']

            print("게시물 정보:")
            for media_data in media_list:
                # 미디어 정보 출력 (기존 코드와 동일)
                print("게시물 ID:", media_data['id'])
                print("캡션:", media_data['caption'])
                print("댓글 수:", media_data['comments_count'])
                like_count = media_data.get('like_count', "비공개")
                print("좋아요 수:", like_count)
                print("미디어 타입:", media_data['media_product_type'])
                print("타임스탬프:", media_data['timestamp'])
                print("사용자명:", media_data['username'])
                print("-------------------------------------------------------------------------")

            # 다음 페이지가 있는지 확인
            if 'paging' in discovery_list and 'cursors' in discovery_list['paging']:
                cursors = data['paging']['cursors']
                if 'after' in cursors:
                    after_token = cursors['after']
                    feed_params['after'] = after_token
                    continue  # 다음 페이지의 데이터를 가져오기 위해 반복
            break  # 더 이상 다음 페이지가 없으면 종료
        else:
            print(f"에러: {feed_response.status_code}, {feed_response.text}")
            break

# 프로필 정보를 가져오기
profile_response = requests.get(base_url, params=profile_params)
if profile_response.status_code == 200:
    profile_data = profile_response.json()
    profile_info = profile_data['business_discovery']

    print("사용자 정보:")
    print(f"ID: {profile_info['ig_id']}")
    print(f"사용자명: {profile_info['username']}")
    print(f"미디어 수: {profile_info['media_count']}")
    print(f"팔로우 수: {profile_info['follows_count']}")
    print(f"팔로워 수: {profile_info['followers_count']}")
    print("-------------------------------------------------------------------------")
else:
    print(f"에러: {profile_response.status_code}, {profile_response.text}")

# 피드 데이터를 가져오고 페이지네이션 처리
fetch_feed_data(feed_params)

import requests

base_url = "https://graph.facebook.com/v17.0/17841460635367800"

# Access Token
access_token = "EAANZBNO9hyTcBO4xIWCqNENLSwZA1Fz70OBzfb8d7e1WOzjeNAZCFek0L7dRgDwIyERGkb8w2uSUi4opvLCQfxWYeCynN1Bg6C2OpXBJfIeRTv6BAnbga0x3BaOphdHFvO6J2KmK0h5nY6wvhjwUQWyYZAtBc1N2ccaVjDRtugDko7N0ltcuu5giqPZCd25MZD"

# Parameters for profile information
profile_params = {
    "fields": "business_discovery.username(b.saem){biography,name,username,follows_count,website,ig_id,followers_count,media_count}",
    "access_token": access_token,
    "limit": 10
}

# Parameters for feed data
feed_params = {
    "fields": "business_discovery.username(b.saem){media.after(after_token){id,caption,comments_count,children{media_type},like_count,media_product_type,timestamp,username}}",
    "access_token": access_token
}

# Fetching profile information
profile_response = requests.get(base_url, params=profile_params)
if profile_response.status_code == 200:
    profile_data = profile_response.json()
    profile_info = profile_data['business_discovery']

    print("사용자 정보:")
    print(f"ID: {profile_info['ig_id']}")
    print(f"사용자명: {profile_info['username']}")
    print(f"미디어 수: {profile_info['media_count']}")
    print(f"팔로우 수: {profile_info['follows_count']}")
    print(f"팔로워 수: {profile_info['followers_count']}")
    print("-------------------------------------------------------------------------")
else:
    print(f"Error: {profile_response.status_code}, {profile_response.text}")

feed_params = {
    "fields": "business_discovery.username(b.saem){media{id,caption,comments_count,children{media_type},like_count,media_product_type,timestamp,username}}",
    "access_token": access_token
}
# Fetching feed data without Pagination
feed_response = requests.get(base_url, params=feed_params)
if feed_response.status_code == 200:
    data = feed_response.json()
    media_list = data['business_discovery']['media']['data']
    discovery_list = data['business_discovery']['media']

    print("게시물 정보:")
    for media_data in media_list:
        # 미디어 정보 출력 (기존 코드와 동일)
        print("게시물 ID:", media_data['id'])
        print("캡션:", media_data['caption'])
        print("댓글 수:", media_data['comments_count'])
        like_count = media_data.get('like_count', "비공개")
        print("좋아요 수:", like_count)
        print("미디어 타입:", media_data['media_product_type'])
        print("타임스탬프:", media_data['timestamp'])
        print("사용자명:", media_data['username'])
        print("-------------------------------------------------------------------------")

    after_token = discovery_list['paging']['cursors']['after']
    print(after_token)


else:
    print(f"Error: {feed_response.status_code}, {feed_response.text}")

feed_params = {
    "fields": "business_discovery.username(b.saem){media.after(after_token){id,caption,comments_count,children{media_type},like_count,media_product_type,timestamp,username}}",
    "access_token": access_token
}
# Fetching feed data without Pagination
feed_response = requests.get(base_url, params=feed_params)
if feed_response.status_code == 200:
    data = feed_response.json()
    media_list = data['business_discovery']['media']['data']
    discovery_list = data['business_discovery']['media']

    print("게시물 정보:")
    for media_data in media_list:
        # 미디어 정보 출력 (기존 코드와 동일)
        print("게시물 ID:", media_data['id'])
        print("캡션:", media_data['caption'])
        print("댓글 수:", media_data['comments_count'])
        like_count = media_data.get('like_count', "비공개")
        print("좋아요 수:", like_count)
        print("미디어 타입:", media_data['media_product_type'])
        print("타임스탬프:", media_data['timestamp'])
        print("사용자명:", media_data['username'])
        print("-------------------------------------------------------------------------")

    after_token = discovery_list['paging']['cursors']['after']
    print(after_token)

else:
    print(f"Error: {feed_response.status_code}, {feed_response.text}")